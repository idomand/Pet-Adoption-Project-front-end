[{"C:\\Users\\ido\\Desktop\\ITC_octber_2020\\FullStack\\pet-adoption-project\\pet-adoption-front-end-idomand\\src\\components\\PetItemCard.jsx":"1","C:\\Users\\ido\\Desktop\\ITC_octber_2020\\FullStack\\pet-adoption-project\\pet-adoption-front-end-idomand\\src\\components\\MyPetsPage.jsx":"2","C:\\Users\\ido\\Desktop\\ITC_octber_2020\\FullStack\\pet-adoption-project\\pet-adoption-front-end-idomand\\src\\components\\AdvancedSearchBar.jsx":"3","C:\\Users\\ido\\Desktop\\ITC_octber_2020\\FullStack\\pet-adoption-project\\pet-adoption-front-end-idomand\\src\\components\\HomePageOpen.jsx":"4","C:\\Users\\ido\\Desktop\\ITC_octber_2020\\FullStack\\pet-adoption-project\\pet-adoption-front-end-idomand\\src\\components\\HomePageClosed.jsx":"5","C:\\Users\\ido\\Desktop\\ITC_octber_2020\\FullStack\\pet-adoption-project\\pet-adoption-front-end-idomand\\src\\App.js":"6","C:\\Users\\ido\\Desktop\\ITC_octber_2020\\FullStack\\pet-adoption-project\\pet-adoption-front-end-idomand\\src\\components\\BasicSearchBar.jsx":"7","C:\\Users\\ido\\Desktop\\ITC_octber_2020\\FullStack\\pet-adoption-project\\pet-adoption-front-end-idomand\\src\\components\\MyRouter.jsx":"8","C:\\Users\\ido\\Desktop\\ITC_octber_2020\\FullStack\\pet-adoption-project\\pet-adoption-front-end-idomand\\src\\lip\\context.js":"9","C:\\Users\\ido\\Desktop\\ITC_octber_2020\\FullStack\\pet-adoption-project\\pet-adoption-front-end-idomand\\src\\components\\SearchPage.jsx":"10","C:\\Users\\ido\\Desktop\\ITC_octber_2020\\FullStack\\pet-adoption-project\\pet-adoption-front-end-idomand\\src\\components\\SearchBar.jsx":"11","C:\\Users\\ido\\Desktop\\ITC_octber_2020\\FullStack\\pet-adoption-project\\pet-adoption-front-end-idomand\\src\\components\\NavBar.jsx":"12","C:\\Users\\ido\\Desktop\\ITC_octber_2020\\FullStack\\pet-adoption-project\\pet-adoption-front-end-idomand\\src\\components\\AdminPage.jsx":"13","C:\\Users\\ido\\Desktop\\ITC_octber_2020\\FullStack\\pet-adoption-project\\pet-adoption-front-end-idomand\\src\\components\\AdminAddPet.jsx":"14","C:\\Users\\ido\\Desktop\\ITC_octber_2020\\FullStack\\pet-adoption-project\\pet-adoption-front-end-idomand\\src\\components\\ProfileSettings.jsx":"15","C:\\Users\\ido\\Desktop\\ITC_octber_2020\\FullStack\\pet-adoption-project\\pet-adoption-front-end-idomand\\src\\components\\Login.jsx":"16","C:\\Users\\ido\\Desktop\\ITC_octber_2020\\FullStack\\pet-adoption-project\\pet-adoption-front-end-idomand\\src\\reportWebVitals.js":"17","C:\\Users\\ido\\Desktop\\ITC_octber_2020\\FullStack\\pet-adoption-project\\pet-adoption-front-end-idomand\\src\\components\\SearchResults.jsx":"18","C:\\Users\\ido\\Desktop\\ITC_octber_2020\\FullStack\\pet-adoption-project\\pet-adoption-front-end-idomand\\src\\index.js":"19","C:\\Users\\ido\\Desktop\\ITC_octber_2020\\FullStack\\pet-adoption-project\\pet-adoption-front-end-idomand\\src\\components\\Main.jsx":"20","C:\\Users\\ido\\Desktop\\ITC_octber_2020\\FullStack\\pet-adoption-project\\pet-adoption-front-end-idomand\\src\\components\\SignUp.jsx":"21","C:\\Users\\ido\\Desktop\\ITC_octber_2020\\FullStack\\pet-adoption-project\\pet-adoption-front-end-idomand\\src\\lip\\api.js":"22","C:\\Users\\ido\\Desktop\\ITC_octber_2020\\FullStack\\pet-adoption-project\\pet-adoption-front-end-idomand\\src\\lip\\validate.js":"23","C:\\Users\\ido\\Desktop\\ITC_octber_2020\\FullStack\\pet-adoption-project\\pet-adoption-front-end-idomand\\src\\components\\AdminEditPet.jsx":"24","C:\\Users\\ido\\Desktop\\ITC_octber_2020\\FullStack\\pet-adoption-project\\pet-adoption-front-end-idomand\\src\\components\\AdminEditPetItem.jsx":"25"},{"size":3462,"mtime":1609844492500,"results":"26","hashOfConfig":"27"},{"size":971,"mtime":1610025233643,"results":"28","hashOfConfig":"27"},{"size":4626,"mtime":1610025035077,"results":"29","hashOfConfig":"27"},{"size":1275,"mtime":1610021796192,"results":"30","hashOfConfig":"27"},{"size":1617,"mtime":1609590054108,"results":"31","hashOfConfig":"27"},{"size":215,"mtime":1607524753278,"results":"32","hashOfConfig":"27"},{"size":1376,"mtime":1610025054770,"results":"33","hashOfConfig":"27"},{"size":1911,"mtime":1610025244222,"results":"34","hashOfConfig":"27"},{"size":205,"mtime":1607591753418,"results":"35","hashOfConfig":"27"},{"size":1552,"mtime":1609849725520,"results":"36","hashOfConfig":"27"},{"size":1335,"mtime":1610025260768,"results":"37","hashOfConfig":"27"},{"size":1679,"mtime":1610025063588,"results":"38","hashOfConfig":"27"},{"size":919,"mtime":1609848239618,"results":"39","hashOfConfig":"27"},{"size":8717,"mtime":1610025031102,"results":"40","hashOfConfig":"27"},{"size":3700,"mtime":1609848252997,"results":"41","hashOfConfig":"27"},{"size":3019,"mtime":1609847000311,"results":"42","hashOfConfig":"27"},{"size":362,"mtime":1606135147132,"results":"43","hashOfConfig":"27"},{"size":645,"mtime":1609850420919,"results":"44","hashOfConfig":"27"},{"size":288,"mtime":1609833673799,"results":"45","hashOfConfig":"27"},{"size":165,"mtime":1607599551567,"results":"46","hashOfConfig":"27"},{"size":5640,"mtime":1610025297897,"results":"47","hashOfConfig":"27"},{"size":2946,"mtime":1610025079084,"results":"48","hashOfConfig":"27"},{"size":292,"mtime":1609845518051,"results":"49","hashOfConfig":"27"},{"size":1765,"mtime":1609844438734,"results":"50","hashOfConfig":"27"},{"size":8179,"mtime":1609844453301,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1t0fafa",{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"54"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114"},"C:\\Users\\ido\\Desktop\\ITC_octber_2020\\FullStack\\pet-adoption-project\\pet-adoption-front-end-idomand\\src\\components\\PetItemCard.jsx",[],["115","116"],"C:\\Users\\ido\\Desktop\\ITC_octber_2020\\FullStack\\pet-adoption-project\\pet-adoption-front-end-idomand\\src\\components\\MyPetsPage.jsx",["117","118","119","120"],"C:\\Users\\ido\\Desktop\\ITC_octber_2020\\FullStack\\pet-adoption-project\\pet-adoption-front-end-idomand\\src\\components\\AdvancedSearchBar.jsx",["121","122"],"C:\\Users\\ido\\Desktop\\ITC_octber_2020\\FullStack\\pet-adoption-project\\pet-adoption-front-end-idomand\\src\\components\\HomePageOpen.jsx",["123"],"import React, { useState, useContext } from \"react\";\r\nimport mainContext from \"../lip/context\";\r\nimport NavBar from \"./NavBar\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// ========\r\n\r\nexport default function HomePageOpen() {\r\n  const contextData = useContext(mainContext);\r\n  const historyFunc = useHistory();\r\n\r\n  // ========\r\n  if (!contextData.isLogin) {\r\n    historyFunc.push(\"/\");\r\n  }\r\n  return (\r\n    <>\r\n      <Card className=\"home-page-card\">\r\n        <Card.Body className=\"d-flex flex-column justify-content-between p-2\">\r\n          <Card.Title>\r\n            <div className=\"d-flex flex-column justify-content-between\">\r\n              <h1 className=\"card-text\">welcome {contextData.userName}</h1>\r\n              <p className=\"card-text\">\r\n                {\" \"}\r\n                Ready to add a new love to your family? There are so many\r\n                wonderful pets in your community waiting for loving homes. Put\r\n                your love into action by adopting today - and spread the word\r\n                that adoption is the way to go.\r\n              </p>\r\n            </div>\r\n          </Card.Title>\r\n          <NavBar currentPage=\"HomePageOpen\" />\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\ido\\Desktop\\ITC_octber_2020\\FullStack\\pet-adoption-project\\pet-adoption-front-end-idomand\\src\\components\\HomePageClosed.jsx",["124","125"],"import React, { useState, useContext } from \"react\";\r\nimport Login from \"./Login\";\r\nimport SignUp from \"./SignUp\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Card } from \"react-bootstrap\";\r\nimport mainContext from \"../lip/context\";\r\n// ========\r\n\r\nexport default function HomePageClosed() {\r\n  // ========\r\n\r\n  const contextData = useContext(mainContext);\r\n  const [currentUser, setCurrentUser] = useState(contextData);\r\n  const historyFunc = useHistory();\r\n\r\n  // ========\r\n\r\n  const handleSearchButton = () => {\r\n    historyFunc.push(\"/searchPage\");\r\n  };\r\n\r\n  // ========\r\n\r\n  return (\r\n    <>\r\n      <Card className=\"home-page-card\">\r\n        <Card.Body className=\"d-flex flex-column justify-content-between p-2\">\r\n          <Card.Title>\r\n            <div className=\"d-flex flex-column justify-content-between\">\r\n              <h1 className=\"card-text\">\r\n                welcome <strong>stranger</strong>\r\n              </h1>\r\n              <p className=\"card-text\">\r\n                {\" \"}\r\n                Ready to add a new love to your family? There are so many\r\n                wonderful pets in your community waiting for loving homes. Put\r\n                your love into action by adopting today - and spread the word\r\n                that adoption is the way to go.\r\n              </p>\r\n            </div>\r\n          </Card.Title>\r\n          <div className=\"d-flex justify-content-between m-5\">\r\n            <Login />\r\n            <SignUp />\r\n            <Button onClick={handleSearchButton}>search!</Button>\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\ido\\Desktop\\ITC_octber_2020\\FullStack\\pet-adoption-project\\pet-adoption-front-end-idomand\\src\\App.js",[],["126","127"],"C:\\Users\\ido\\Desktop\\ITC_octber_2020\\FullStack\\pet-adoption-project\\pet-adoption-front-end-idomand\\src\\components\\BasicSearchBar.jsx",["128"],"C:\\Users\\ido\\Desktop\\ITC_octber_2020\\FullStack\\pet-adoption-project\\pet-adoption-front-end-idomand\\src\\components\\MyRouter.jsx",["129"],"import React, { useState } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { MainProvider } from \"../lip/context\";\r\nimport SearchPage from \"./SearchPage\";\r\nimport ProfileSettings from \"./ProfileSettings\";\r\nimport MyPetsPage from \"./MyPetsPage\";\r\nimport HomePageClosed from \"./HomePageClosed\";\r\nimport HomePageOpen from \"./HomePageOpen\";\r\nimport AdminPage from \"./AdminPage\";\r\n\r\n// ========\r\n\r\nexport default function MyRouter() {\r\n  const contextData = {\r\n    isAdmin: false,\r\n    isLogIn: false,\r\n    userEmail: \"\",\r\n    userName: \"\",\r\n    userPhoneNumber: \"\",\r\n    logInFunc: (userObject) => {\r\n      contextData.userEmail = userObject.email;\r\n      contextData.userName = userObject.name;\r\n      contextData.userPhoneNumber = userObject.phoneNumber;\r\n      contextData.isAdmin = userObject.isAdmin;\r\n      contextData.isLogin = userObject.isLogin;\r\n    },\r\n    logOutFunc: () => {\r\n      contextData.isLogin = false;\r\n      contextData.userEmail = \"\";\r\n      contextData.userName = \"\";\r\n      contextData.userPhoneNumber = \"\";\r\n      contextData.isAdmin = false;\r\n    },\r\n    petsArray: [],\r\n  };\r\n  // ========\r\n  return (\r\n    <>\r\n      <Router>\r\n        <MainProvider value={contextData}>\r\n          <Switch>\r\n            <Route path=\"/SearchPage\">\r\n              <SearchPage />\r\n            </Route>\r\n            <Route path=\"/AdminPage\">\r\n              <AdminPage />\r\n            </Route>\r\n            <Route path=\"/MyPetsPage\">\r\n              <MyPetsPage />\r\n            </Route>\r\n            <Route path=\"/ProfileSettings\">\r\n              <ProfileSettings />\r\n            </Route>\r\n            <Route path=\"/HomePageOpen\">\r\n              <HomePageOpen />\r\n            </Route>\r\n            <Route exact path=\"/\">\r\n              <HomePageClosed />\r\n            </Route>\r\n          </Switch>\r\n        </MainProvider>\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\ido\\Desktop\\ITC_octber_2020\\FullStack\\pet-adoption-project\\pet-adoption-front-end-idomand\\src\\lip\\context.js",[],"C:\\Users\\ido\\Desktop\\ITC_octber_2020\\FullStack\\pet-adoption-project\\pet-adoption-front-end-idomand\\src\\components\\SearchPage.jsx",["130","131","132","133","134","135","136","137","138"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Form, Button, Card, Dropdown } from \"react-bootstrap\";\r\nimport mainContext from \"../lip/context\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport NavBar from \"./NavBar\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport SearchResults from \"./SearchResults\";\r\n\r\n//====================\r\n\r\nexport default function SearchPage() {\r\n  //====================\r\n\r\n  const contextData = useContext(mainContext);\r\n  const historyFunc = useHistory();\r\n  // const [currentUser, setCurrentUser] = useState(contextData);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [searchOption, setSearchOption] = useState(\"\");\r\n  const [typeOfAnimal, setTypeOfAnimal] = useState(\"\");\r\n\r\n  //====================\r\n\r\n  const handleHomeButton = () => {\r\n    if (contextData.isLogin) {\r\n      historyFunc.push(\"/HomePageOpen\");\r\n    } else {\r\n      historyFunc.push(\"/\");\r\n    }\r\n  };\r\n\r\n  //====================\r\n\r\n  return (\r\n    <>\r\n      <Card className=\"home-page-card\">\r\n        <Card.Body className=\"d-flex flex-column justify-content-between\">\r\n          <Card.Title>\r\n            <h1>Search Page</h1>\r\n          </Card.Title>\r\n          <SearchBar />\r\n          <SearchResults />\r\n          <div className=\"mt-3\">\r\n            {contextData.isLogin ? (\r\n              <NavBar currentPage=\"SearchPage\" />\r\n            ) : (\r\n              <Button onClick={handleHomeButton}>HomePage</Button>\r\n            )}\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\ido\\Desktop\\ITC_octber_2020\\FullStack\\pet-adoption-project\\pet-adoption-front-end-idomand\\src\\components\\SearchBar.jsx",["139","140"],"import React, { useState, useContext } from \"react\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport mainContext from \"../lip/context\";\r\nimport BasicSearchBar from \"./BasicSearchBar\";\r\nimport AdvancedSearchBar from \"./AdvancedSearchBar\";\r\nimport \"./SearchBar.css\";\r\n//====================\r\n\r\nexport default function SearchBar() {\r\n  const contextData = useContext(mainContext);\r\n  const [currentUser, setCurrentUser] = useState(contextData);\r\n  const [searchOption, setSearchOption] = useState(\"BasicSearch\");\r\n\r\n  return (\r\n    <div className=\"d-flex align-items-center justify-content-around\">\r\n      <Dropdown>\r\n        <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n          Search Options\r\n        </Dropdown.Toggle>\r\n        <Dropdown.Menu>\r\n          <Dropdown.Item\r\n            onClick={() => {\r\n              setSearchOption(\"BasicSearch\");\r\n            }}\r\n          >\r\n            Basic Search\r\n          </Dropdown.Item>\r\n          <Dropdown.Item\r\n            onClick={() => {\r\n              setSearchOption(\"AdvancedSearch\");\r\n            }}\r\n          >\r\n            Advanced Search\r\n          </Dropdown.Item>\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n\r\n      {searchOption === \"BasicSearch\" ? (\r\n        <BasicSearchBar />\r\n      ) : (\r\n        <AdvancedSearchBar />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\ido\\Desktop\\ITC_octber_2020\\FullStack\\pet-adoption-project\\pet-adoption-front-end-idomand\\src\\components\\NavBar.jsx",["141"],"C:\\Users\\ido\\Desktop\\ITC_octber_2020\\FullStack\\pet-adoption-project\\pet-adoption-front-end-idomand\\src\\components\\AdminPage.jsx",["142","143"],"import React, { useState, useContext } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport mainContext from \"../lip/context\";\r\nimport NavBar from \"./NavBar\";\r\nimport AdminAddPet from \"./AdminAddPet\";\r\nimport AdminEditPet from \"./AdminEditPet\";\r\nexport default function AdminPage() {\r\n  // ========\r\n  const myMockData = useContext(mainContext);\r\n  const [currentUser, setCurrentUser] = useState(myMockData);\r\n\r\n  // ========\r\n\r\n  // ========\r\n\r\n  return (\r\n    <>\r\n      <Card className=\"home-page-card\">\r\n        <Card.Body className=\"d-flex flex-column justify-content-between\">\r\n          <Card.Title>\r\n            <div>\r\n              <h1>Admin Page</h1>\r\n            </div>\r\n          </Card.Title>\r\n          <span>\r\n            <AdminAddPet />\r\n            <AdminEditPet />\r\n          </span>\r\n          <NavBar currentPage=\"ProfileSettings\" />\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\ido\\Desktop\\ITC_octber_2020\\FullStack\\pet-adoption-project\\pet-adoption-front-end-idomand\\src\\components\\AdminAddPet.jsx",["144","145","146","147","148","149","150","151"],"C:\\Users\\ido\\Desktop\\ITC_octber_2020\\FullStack\\pet-adoption-project\\pet-adoption-front-end-idomand\\src\\components\\ProfileSettings.jsx",["152","153"],"import React, { useState, useContext } from \"react\";\r\nimport { Form, Button, Card } from \"react-bootstrap\";\r\nimport mainContext from \"../lip/context\";\r\nimport NavBar from \"./NavBar\";\r\n// ========\r\n\r\nexport default function ProfileSettings() {\r\n  const myMockData = useContext(mainContext);\r\n  const [currentUser, setCurrentUser] = useState(myMockData);\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n\r\n  // ========\r\n\r\n  const onSignUpSubmit = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  // ========\r\n\r\n  return (\r\n    <>\r\n      <Card className=\"home-page-card\">\r\n        <Card.Body className=\"d-flex flex-column justify-content-between\">\r\n          <Card.Title>\r\n            <div>\r\n              <h1>Profile Settings</h1>\r\n            </div>\r\n          </Card.Title>\r\n          <Form\r\n            onSubmit={(event) => {\r\n              onSignUpSubmit(event);\r\n            }}\r\n          >\r\n            <Form.Group controlId=\"formName\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter First and Lest Name\"\r\n                value={name}\r\n                required\r\n                onChange={(event) => {\r\n                  setName(event.target.value);\r\n                }}\r\n              />\r\n              <Form.Text className=\"text-muted\"></Form.Text>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"phoneNumber\">\r\n              <Form.Label>Phone Number</Form.Label>\r\n              <Form.Control\r\n                type=\"tel\"\r\n                placeholder=\"Enter phoneNumber\"\r\n                value={phoneNumber}\r\n                required\r\n                onChange={(event) => {\r\n                  setPhoneNumber(event.target.value);\r\n                }}\r\n              />\r\n              <Form.Text className=\"text-muted\"></Form.Text>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n              <Form.Label>Email address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter email\"\r\n                value={email}\r\n                required\r\n                onChange={(event) => {\r\n                  setEmail(event.target.value);\r\n                }}\r\n              />\r\n              <Form.Text className=\"text-muted\"></Form.Text>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                required\r\n                value={password}\r\n                onChange={(event) => {\r\n                  setPassword(event.target.value);\r\n                }}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicPasswordConfirmation\">\r\n              <Form.Label>Password Confirmation</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Re-Enter Password\"\r\n                required\r\n                value={passwordConfirmation}\r\n                onChange={(event) => {\r\n                  setPasswordConfirmation(event.target.value);\r\n                }}\r\n              />\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n          <NavBar currentPage=\"ProfileSettings\" />\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\ido\\Desktop\\ITC_octber_2020\\FullStack\\pet-adoption-project\\pet-adoption-front-end-idomand\\src\\components\\Login.jsx",[],"C:\\Users\\ido\\Desktop\\ITC_octber_2020\\FullStack\\pet-adoption-project\\pet-adoption-front-end-idomand\\src\\reportWebVitals.js",[],["154","155"],"C:\\Users\\ido\\Desktop\\ITC_octber_2020\\FullStack\\pet-adoption-project\\pet-adoption-front-end-idomand\\src\\components\\SearchResults.jsx",["156"],"C:\\Users\\ido\\Desktop\\ITC_octber_2020\\FullStack\\pet-adoption-project\\pet-adoption-front-end-idomand\\src\\index.js",[],"C:\\Users\\ido\\Desktop\\ITC_octber_2020\\FullStack\\pet-adoption-project\\pet-adoption-front-end-idomand\\src\\components\\Main.jsx",[],"C:\\Users\\ido\\Desktop\\ITC_octber_2020\\FullStack\\pet-adoption-project\\pet-adoption-front-end-idomand\\src\\components\\SignUp.jsx",["157","158","159"],"import React, { useState, useContext } from \"react\";\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\r\nimport ReactModal from \"react-modal\";\r\nimport mainContext from \"../lip/context\";\r\nimport { signUpNewUser, loginUser } from \"../lip/api\";\r\nimport { validatePasswords } from \"../lip/validate\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// ========\r\n\r\nexport default function SignUp() {\r\n  const historyFunc = useHistory();\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n  const contextData = useContext(mainContext);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [validationError, setValidationError] = useState(\"\");\r\n  const [validationOK, setValidationOK] = useState(\"\");\r\n\r\n  const [isSignUp, setIsSignUp] = useState(false);\r\n  // ========\r\n\r\n  if (isSignUp) {\r\n    historyFunc.push(\"./HomePageOpen\");\r\n  }\r\n\r\n  const openModel = () => {\r\n    setValidationOK(``);\r\n\r\n    setIsOpen(true);\r\n  };\r\n  const closeModel = () => {\r\n    setIsOpen(false);\r\n  };\r\n  const onSignUpSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setValidationOK(``);\r\n    const newUser = {\r\n      name,\r\n      email,\r\n      phoneNumber,\r\n      password,\r\n    };\r\n    const isPasswordsInvalid = validatePasswords(newUser, passwordConfirmation);\r\n    setValidationError(isPasswordsInvalid);\r\n    if (isPasswordsInvalid) {\r\n      return;\r\n    } else {\r\n      const userSignIn = await signUpNewUser(newUser);\r\n\r\n      if (userSignIn === \"Email already in use\") {\r\n        setValidationError(\"Email already in use, pick new Email or Log in\");\r\n      } else if (userSignIn === \"ok\") {\r\n        setValidationOK(`${name} had been sign in`);\r\n        setName(\"\");\r\n        setEmail(\"\");\r\n        setPassword(\"\");\r\n        setPasswordConfirmation(\"\");\r\n        setPhoneNumber(\"\");\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Button onClick={openModel}>Sign Up</Button>\r\n\r\n      <ReactModal ariaHideApp={false} isOpen={isOpen}>\r\n        <div className=\"d-flex\">\r\n          <Button onClick={closeModel}> close</Button>\r\n          {validationOK ? (\r\n            <Alert className=\"m-auto\" variant={\"success\"}>\r\n              {validationOK}\r\n            </Alert>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          {validationError ? (\r\n            <Alert className=\"m-auto\" variant={\"danger\"}>\r\n              {validationError}\r\n            </Alert>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n        <Card className=\"my-form\">\r\n          <Card.Title className=\"mx-auto\">\r\n            <strong>Sign Up</strong>\r\n          </Card.Title>\r\n          <Card.Body>\r\n            <Form\r\n              onSubmit={(event) => {\r\n                onSignUpSubmit(event);\r\n              }}\r\n            >\r\n              <Form.Group controlId=\"formName\">\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Enter First and Lest Name\"\r\n                  value={name}\r\n                  required\r\n                  onChange={(event) => {\r\n                    setName(event.target.value);\r\n                  }}\r\n                />\r\n                <Form.Text className=\"text-muted\"></Form.Text>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"phoneNumber\">\r\n                <Form.Label>Phone Number</Form.Label>\r\n                <Form.Control\r\n                  type=\"tel\"\r\n                  placeholder=\"Enter phoneNumber\"\r\n                  value={phoneNumber}\r\n                  required\r\n                  onChange={(event) => {\r\n                    setPhoneNumber(event.target.value);\r\n                  }}\r\n                />\r\n                <Form.Text className=\"text-muted\"></Form.Text>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>Email address</Form.Label>\r\n                <Form.Control\r\n                  type=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                  value={email}\r\n                  required\r\n                  onChange={(event) => {\r\n                    setEmail(event.target.value);\r\n                  }}\r\n                />\r\n                <Form.Text className=\"text-muted\"></Form.Text>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formBasicPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                  required\r\n                  value={password}\r\n                  onChange={(event) => {\r\n                    setPassword(event.target.value);\r\n                  }}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formBasicPasswordConfirmation\">\r\n                <Form.Label>Password Confirmation</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Re-Enter Password\"\r\n                  required\r\n                  value={passwordConfirmation}\r\n                  onChange={(event) => {\r\n                    setPasswordConfirmation(event.target.value);\r\n                  }}\r\n                />\r\n              </Form.Group>\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      </ReactModal>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\ido\\Desktop\\ITC_octber_2020\\FullStack\\pet-adoption-project\\pet-adoption-front-end-idomand\\src\\lip\\api.js",["160"],"C:\\Users\\ido\\Desktop\\ITC_octber_2020\\FullStack\\pet-adoption-project\\pet-adoption-front-end-idomand\\src\\lip\\validate.js",[],"C:\\Users\\ido\\Desktop\\ITC_octber_2020\\FullStack\\pet-adoption-project\\pet-adoption-front-end-idomand\\src\\components\\AdminEditPet.jsx",["161"],"import React, { useState, useContext } from \"react\";\r\nimport { Button, Table } from \"react-bootstrap\";\r\nimport mainContext from \"../lip/context\";\r\nimport ReactModal from \"react-modal\";\r\nimport { getAllPets } from \"../lip/api\";\r\nimport AdminEditPetItem from \"./AdminEditPetItem\";\r\n// ================\r\n\r\nexport default function AdminEditPet() {\r\n  const contextData = useContext(mainContext);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [allPetsArray, setAllPetsArray] = useState([]);\r\n  const getPets = async () => {\r\n    const result = await getAllPets();\r\n    setAllPetsArray(result);\r\n  };\r\n  const openModel = () => {\r\n    setIsOpen(true);\r\n    getPets();\r\n  };\r\n  const closeModel = () => {\r\n    setIsOpen(false);\r\n  };\r\n  return (\r\n    <>\r\n      <Button variant=\"success\" onClick={openModel}>\r\n        Edit Pet\r\n      </Button>\r\n      <ReactModal ariaHideApp={false} isOpen={isOpen}>\r\n        <Button onClick={closeModel}>cancel</Button>\r\n\r\n        <div className=\"pet-card-div\">\r\n          <Table id=\"students\">\r\n            <tbody>\r\n              {allPetsArray\r\n                ? allPetsArray.map((element) => {\r\n                    const { petName, typeOfAnimal, _id } = element;\r\n                    return (\r\n                      <tr key={_id}>\r\n                        <td>{petName}</td>\r\n                        <td>{typeOfAnimal}</td>\r\n                        <td>{_id}</td>\r\n                        <td>\r\n                          {\" \"}\r\n                          <AdminEditPetItem animalDetails={element} />\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })\r\n                : \"\"}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      </ReactModal>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\ido\\Desktop\\ITC_octber_2020\\FullStack\\pet-adoption-project\\pet-adoption-front-end-idomand\\src\\components\\AdminEditPetItem.jsx",["162","163"],"import React, { useState, useContext } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport mainContext from \"../lip/context\";\r\nimport ReactModal from \"react-modal\";\r\nimport { editPet } from \"../lip/api\";\r\n// ================\r\n\r\nexport default function AdminEditPet(props) {\r\n  const contextData = useContext(mainContext);\r\n  const [petName, setPetName] = useState(props.animalDetails.petName);\r\n  const [typeOfAnimal, setTypeOfAnimal] = useState(\r\n    props.animalDetails.typeOfAnimal\r\n  );\r\n  // const [petPicture, setPetPicture] = useState(\"\"); // remember: +++ add the function to upload a picture\r\n  const [adoptionStatus, setAdoptionStatus] = useState(\r\n    props.animalDetails.adoptionStatus\r\n  );\r\n  const [breed, setBreed] = useState(props.animalDetails.breed);\r\n  const [petHeight, setPetHeight] = useState(props.animalDetails.petHeight);\r\n  const [petWeight, setPetWeight] = useState(props.animalDetails.petWeight);\r\n  const [petColor, setPetColor] = useState(props.animalDetails.petColor);\r\n  const [petBio, setPetBio] = useState(props.animalDetails.petBio);\r\n  const [petIsHypoallergenic, setPetIsHypoallergenic] = useState(\r\n    props.animalDetails.petIsHypoallergenic\r\n  );\r\n  const [petIsDietaryRestrictions, setPetIsDietaryRestrictions] = useState(\r\n    props.animalDetails.petIsDietaryRestrictions\r\n  );\r\n  const [isEditOpen, setIsEditOpen] = useState(false);\r\n\r\n  // ================\r\n\r\n  const openEdit = () => {\r\n    setIsEditOpen(true);\r\n  };\r\n  const closeEdit = () => {\r\n    setIsEditOpen(false);\r\n  };\r\n  const onEditPet = async (event) => {\r\n    event.preventDefault();\r\n    const petObjectToEdit = {\r\n      _id: props.animalDetails._id,\r\n      newPetObject: {\r\n        petName,\r\n        typeOfAnimal,\r\n        adoptionStatus,\r\n        breed,\r\n        petHeight,\r\n        petColor,\r\n        petWeight,\r\n        petBio,\r\n        petIsHypoallergenic,\r\n        petIsDietaryRestrictions,\r\n      },\r\n    };\r\n    const petAfterUpdate = await editPet(petObjectToEdit);\r\n\r\n    setIsEditOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button variant=\"secondary\" onClick={openEdit}>\r\n        Edit Pet\r\n      </Button>\r\n      <ReactModal ariaHideApp={false} isOpen={isEditOpen}>\r\n        <Button onClick={closeEdit}>cancel</Button>\r\n\r\n        <div className=\"d-flex\">\r\n          <Form>\r\n            <Form.Group controlId=\"formName\">\r\n              <Form.Label>Pet Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter Pet Name\"\r\n                value={petName}\r\n                required\r\n                onChange={(event) => {\r\n                  setPetName(event.target.value);\r\n                }}\r\n              />\r\n              <Form.Text className=\"text-muted\"></Form.Text>\r\n            </Form.Group>\r\n          </Form>\r\n\r\n          <Form\r\n            onClick={(event) => {\r\n              setTypeOfAnimal(event.target.value);\r\n            }}\r\n          >\r\n            <Form.Group controlId=\"exampleForm.SelectCustom\">\r\n              <Form.Label>Type of Animal</Form.Label>\r\n              <Form.Control as=\"select\" custom defaultValue={typeOfAnimal}>\r\n                <option> </option>\r\n                <option>dog</option>\r\n                <option>cat</option>\r\n                <option>other</option>\r\n              </Form.Control>\r\n            </Form.Group>\r\n          </Form>\r\n          <Form\r\n            onClick={(event) => {\r\n              setAdoptionStatus(event.target.value);\r\n            }}\r\n          >\r\n            <Form.Group controlId=\"exampleForm.SelectCustom\">\r\n              <Form.Label>Adoption Status</Form.Label>\r\n              <Form.Control as=\"select\" custom defaultValue={adoptionStatus}>\r\n                <option> </option>\r\n                <option>waiting for adaption</option>\r\n                <option>waiting For Foster Home</option>\r\n              </Form.Control>\r\n            </Form.Group>\r\n          </Form>\r\n          <Form\r\n            onClick={(event) => {\r\n              setBreed(event.target.value);\r\n            }}\r\n          >\r\n            <Form.Group controlId=\"exampleForm.SelectCustom\">\r\n              <Form.Label>breed</Form.Label>\r\n              <Form.Control as=\"select\" custom defaultValue={breed}>\r\n                <option> </option>\r\n                <option>mix</option>\r\n                <option>pureBreed</option>\r\n              </Form.Control>\r\n            </Form.Group>\r\n          </Form>\r\n\r\n          <Form\r\n            onClick={(event) => {\r\n              setPetColor(event.target.value);\r\n            }}\r\n          >\r\n            <Form.Group controlId=\"exampleForm.SelectCustom\">\r\n              <Form.Label>Pet color</Form.Label>\r\n              <Form.Control as=\"select\" custom defaultValue={petColor}>\r\n                <option> </option>\r\n                <option>Black</option>\r\n                <option>Brown</option>\r\n                <option>White</option>\r\n                <option>mix</option>\r\n              </Form.Control>\r\n            </Form.Group>\r\n          </Form>\r\n        </div>\r\n        <div className=\"d-flex\">\r\n          <Form\r\n            onClick={(event) => {\r\n              setPetHeight(event.target.value);\r\n            }}\r\n          >\r\n            <Form.Group controlId=\"exampleForm.SelectCustom\">\r\n              <Form.Label>Pet Height</Form.Label>\r\n              <Form.Control as=\"select\" custom defaultValue={petHeight}>\r\n                <option> </option>\r\n                <option>Under 20 sm</option>\r\n                <option>20sm to 50sm</option>\r\n                <option>over 50sm</option>\r\n              </Form.Control>\r\n            </Form.Group>\r\n          </Form>\r\n          <Form\r\n            onClick={(event) => {\r\n              setPetWeight(event.target.value);\r\n            }}\r\n          >\r\n            <Form.Group controlId=\"exampleForm.SelectCustom\">\r\n              <Form.Label>Pet Weight</Form.Label>\r\n              <Form.Control as=\"select\" custom defaultValue={petWeight}>\r\n                <option> </option>\r\n                <option>Under 5kg</option>\r\n                <option>5kg to 15kg</option>\r\n                <option>over 15kg</option>\r\n              </Form.Control>\r\n            </Form.Group>\r\n          </Form>\r\n\r\n          <Form\r\n            onClick={(event) => {\r\n              setPetBio(event.target.value);\r\n            }}\r\n          >\r\n            <Form.Group controlId=\"exampleForm.SelectCustom\">\r\n              <Form.Label>Pet bio</Form.Label>\r\n              <Form.Control as=\"select\" custom defaultValue={petBio}>\r\n                <option> </option>\r\n                <option>good boy</option>\r\n                <option>bad boy</option>\r\n                <option>great boy</option>\r\n              </Form.Control>\r\n            </Form.Group>\r\n          </Form>\r\n          <Form\r\n            onClick={(event) => {\r\n              setPetIsHypoallergenic(event.target.value);\r\n            }}\r\n          >\r\n            <Form.Group controlId=\"exampleForm.SelectCustom\">\r\n              <Form.Label> Is Hypoallergenic</Form.Label>\r\n              <Form.Control\r\n                as=\"select\"\r\n                custom\r\n                defaultValue={petIsHypoallergenic}\r\n              >\r\n                <option> </option>\r\n                <option>yes</option>\r\n                <option>no</option>\r\n              </Form.Control>\r\n            </Form.Group>\r\n          </Form>\r\n          <Form\r\n            onClick={(event) => {\r\n              setPetIsDietaryRestrictions(event.target.value);\r\n            }}\r\n          >\r\n            <Form.Group controlId=\"exampleForm.SelectCustom\">\r\n              <Form.Label> Is DietaryRestrictions</Form.Label>\r\n              <Form.Control\r\n                as=\"select\"\r\n                custom\r\n                defaultValue={petIsDietaryRestrictions}\r\n              >\r\n                <option> </option>\r\n                <option>yes</option>\r\n                <option>no</option>\r\n              </Form.Control>\r\n            </Form.Group>\r\n          </Form>\r\n        </div>\r\n\r\n        <div>\r\n          <Button variant=\"primary\" type=\"submit\" onClick={onEditPet}>\r\n            Edit Pet\r\n          </Button>\r\n        </div>\r\n      </ReactModal>\r\n    </>\r\n  );\r\n}\r\n",{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","severity":1,"message":"169","line":6,"column":8,"nodeType":"170","messageId":"171","endLine":6,"endColumn":19},{"ruleId":"168","severity":1,"message":"172","line":14,"column":9,"nodeType":"170","messageId":"171","endLine":14,"endColumn":20},{"ruleId":"168","severity":1,"message":"173","line":16,"column":10,"nodeType":"170","messageId":"171","endLine":16,"endColumn":21},{"ruleId":"168","severity":1,"message":"174","line":16,"column":23,"nodeType":"170","messageId":"171","endLine":16,"endColumn":37},{"ruleId":"168","severity":1,"message":"173","line":11,"column":10,"nodeType":"170","messageId":"171","endLine":11,"endColumn":21},{"ruleId":"168","severity":1,"message":"174","line":11,"column":23,"nodeType":"170","messageId":"171","endLine":11,"endColumn":37},{"ruleId":"168","severity":1,"message":"175","line":1,"column":17,"nodeType":"170","messageId":"171","endLine":1,"endColumn":25},{"ruleId":"168","severity":1,"message":"173","line":13,"column":10,"nodeType":"170","messageId":"171","endLine":13,"endColumn":21},{"ruleId":"168","severity":1,"message":"174","line":13,"column":23,"nodeType":"170","messageId":"171","endLine":13,"endColumn":37},{"ruleId":"164","replacedBy":"176"},{"ruleId":"166","replacedBy":"177"},{"ruleId":"168","severity":1,"message":"178","line":4,"column":10,"nodeType":"170","messageId":"171","endLine":4,"endColumn":20},{"ruleId":"168","severity":1,"message":"175","line":1,"column":17,"nodeType":"170","messageId":"171","endLine":1,"endColumn":25},{"ruleId":"168","severity":1,"message":"179","line":1,"column":39,"nodeType":"170","messageId":"171","endLine":1,"endColumn":48},{"ruleId":"168","severity":1,"message":"180","line":2,"column":10,"nodeType":"170","messageId":"171","endLine":2,"endColumn":14},{"ruleId":"168","severity":1,"message":"181","line":2,"column":30,"nodeType":"170","messageId":"171","endLine":2,"endColumn":38},{"ruleId":"168","severity":1,"message":"182","line":17,"column":10,"nodeType":"170","messageId":"171","endLine":17,"endColumn":20},{"ruleId":"168","severity":1,"message":"183","line":17,"column":22,"nodeType":"170","messageId":"171","endLine":17,"endColumn":35},{"ruleId":"168","severity":1,"message":"184","line":18,"column":10,"nodeType":"170","messageId":"171","endLine":18,"endColumn":22},{"ruleId":"168","severity":1,"message":"185","line":18,"column":24,"nodeType":"170","messageId":"171","endLine":18,"endColumn":39},{"ruleId":"168","severity":1,"message":"186","line":19,"column":10,"nodeType":"170","messageId":"171","endLine":19,"endColumn":22},{"ruleId":"168","severity":1,"message":"187","line":19,"column":24,"nodeType":"170","messageId":"171","endLine":19,"endColumn":39},{"ruleId":"168","severity":1,"message":"173","line":11,"column":10,"nodeType":"170","messageId":"171","endLine":11,"endColumn":21},{"ruleId":"168","severity":1,"message":"174","line":11,"column":23,"nodeType":"170","messageId":"171","endLine":11,"endColumn":37},{"ruleId":"168","severity":1,"message":"175","line":1,"column":17,"nodeType":"170","messageId":"171","endLine":1,"endColumn":25},{"ruleId":"168","severity":1,"message":"173","line":10,"column":10,"nodeType":"170","messageId":"171","endLine":10,"endColumn":21},{"ruleId":"168","severity":1,"message":"174","line":10,"column":23,"nodeType":"170","messageId":"171","endLine":10,"endColumn":37},{"ruleId":"168","severity":1,"message":"188","line":2,"column":24,"nodeType":"170","messageId":"171","endLine":2,"endColumn":29},{"ruleId":"168","severity":1,"message":"189","line":7,"column":3,"nodeType":"170","messageId":"171","endLine":7,"endColumn":15},{"ruleId":"168","severity":1,"message":"190","line":15,"column":9,"nodeType":"170","messageId":"171","endLine":15,"endColumn":20},{"ruleId":"168","severity":1,"message":"191","line":30,"column":10,"nodeType":"170","messageId":"171","endLine":30,"endColumn":20},{"ruleId":"168","severity":1,"message":"192","line":30,"column":22,"nodeType":"170","messageId":"171","endLine":30,"endColumn":35},{"ruleId":"168","severity":1,"message":"193","line":31,"column":26,"nodeType":"170","messageId":"171","endLine":31,"endColumn":43},{"ruleId":"168","severity":1,"message":"194","line":62,"column":11,"nodeType":"170","messageId":"171","endLine":62,"endColumn":17},{"ruleId":"168","severity":1,"message":"195","line":79,"column":11,"nodeType":"170","messageId":"171","endLine":79,"endColumn":23},{"ruleId":"168","severity":1,"message":"173","line":9,"column":10,"nodeType":"170","messageId":"171","endLine":9,"endColumn":21},{"ruleId":"168","severity":1,"message":"174","line":9,"column":23,"nodeType":"170","messageId":"171","endLine":9,"endColumn":37},{"ruleId":"164","replacedBy":"196"},{"ruleId":"166","replacedBy":"197"},{"ruleId":"168","severity":1,"message":"179","line":1,"column":29,"nodeType":"170","messageId":"171","endLine":1,"endColumn":38},{"ruleId":"168","severity":1,"message":"198","line":5,"column":25,"nodeType":"170","messageId":"171","endLine":5,"endColumn":34},{"ruleId":"168","severity":1,"message":"190","line":19,"column":9,"nodeType":"170","messageId":"171","endLine":19,"endColumn":20},{"ruleId":"168","severity":1,"message":"199","line":24,"column":20,"nodeType":"170","messageId":"171","endLine":24,"endColumn":31},{"ruleId":"168","severity":1,"message":"200","line":90,"column":11,"nodeType":"170","messageId":"171","endLine":90,"endColumn":14},{"ruleId":"168","severity":1,"message":"190","line":10,"column":9,"nodeType":"170","messageId":"171","endLine":10,"endColumn":20},{"ruleId":"168","severity":1,"message":"190","line":9,"column":9,"nodeType":"170","messageId":"171","endLine":9,"endColumn":20},{"ruleId":"168","severity":1,"message":"201","line":56,"column":11,"nodeType":"170","messageId":"171","endLine":56,"endColumn":25},"no-native-reassign",["202"],"no-negated-in-lhs",["203"],"no-unused-vars","'PetItemCard' is defined but never used.","Identifier","unusedVar","'historyFunc' is assigned a value but never used.","'currentUser' is assigned a value but never used.","'setCurrentUser' is assigned a value but never used.","'useState' is defined but never used.",["202"],["203"],"'getAllPets' is defined but never used.","'useEffect' is defined but never used.","'Form' is defined but never used.","'Dropdown' is defined but never used.","'searchTerm' is assigned a value but never used.","'setSearchTerm' is assigned a value but never used.","'searchOption' is assigned a value but never used.","'setSearchOption' is assigned a value but never used.","'typeOfAnimal' is assigned a value but never used.","'setTypeOfAnimal' is assigned a value but never used.","'Alert' is defined but never used.","'getPetImages' is defined but never used.","'contextData' is assigned a value but never used.","'petPicture' is assigned a value but never used.","'setPetPicture' is assigned a value but never used.","'setFileInputState' is assigned a value but never used.","'result' is assigned a value but never used.","'uploadStatus' is assigned a value but never used.",["202"],["203"],"'loginUser' is defined but never used.","'setIsSignUp' is assigned a value but never used.","'foo' is assigned a value but never used.","'petAfterUpdate' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]